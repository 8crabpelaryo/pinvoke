steps:

- task: VSBuild@1
  displayName: Build Visual Studio solution
  inputs:
    msbuildArgs: /t:build,pack /m /v:m /bl:"$(Build.ArtifactStagingDirectory)/build_logs/msbuild.binlog"
    platform: Any CPU
    configuration: $(BuildConfiguration)

- powershell: .\build.ps1 -Test
  displayName: Test
  failOnStderr: true

- pwsh: >
    dotnet tool install --tool-path obj SignClient

    obj/SignClient sign
    --baseDirectory '$(System.DefaultWorkingDirectory)/bin/$(BuildConfiguration)/Packages'
    --input '**/*'
    --config '$(System.DefaultWorkingDirectory)/azure-pipelines/SignClient.json'
    --filelist '$(System.DefaultWorkingDirectory)/azure-pipelines/signfiles.txt'
    --user '$(codesign_username)'
    --secret '$(codesign_secret)'
    --name 'PInvoke'
    --descriptionUrl 'https://github.com/dotnet/pinvoke'
  displayName: Code sign
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- task: PowerShell@2
  inputs:
    filePath: azure-pipelines/variables/_pipelines.ps1
    failOnStderr: true
  displayName: Update pipeline variables based on build outputs
  condition: succeededOrFailed()

- task: PowerShell@2
  inputs:
    filePath: azure-pipelines/artifacts/_pipelines.ps1
    arguments: -ArtifactNameSuffix "-$(Agent.JobName)"
  displayName: Publish artifacts
  condition: succeededOrFailed()

- task: PublishSymbols@2
  inputs:
    SymbolsFolder: $(Build.ArtifactStagingDirectory)/symbols-Windows
    SearchPattern: '**/*.pdb'
    IndexSources: false
    SymbolServerType: TeamServices
  displayName: Publish symbols to symbol server
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Agent.OS'], 'Windows_NT'))
